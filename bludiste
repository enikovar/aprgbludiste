#   Po spuštění skriptu budete vyzváni ke zvolení velikosti hracího pole. Velikost hracího pole můžete zvolit v rozmezí 
od 5 do 30. Poté zmáčkněte enter. Po zmáčknutí tlačítka enter se vykreslí bludiště. V bludišti černá barva charakterizuje průchozí 
políčka, modrá “ překážku“,  zelené políčko start a červené cíl. Jakmile je dokončeno bludiště postupně se vykreslí žlutou barvou i 
nejkratší cesta. 


import turtle
import numpy as np
import random
import time

def matice(m):

    bludiste = np.random.randint(0, 3, (m, m))
    print("INIT\n", bludiste)
    bludiste[0, :] = 0
    bludiste[:, 0] = 0
    bludiste[-1, :] = 0
    bludiste[:, -1] = 0
    bludiste = np.where(bludiste == 2, 1, bludiste)
    print("INIT2\n", bludiste)
    
    
    # souradnice pro start
    A = list(range(1, m-1))
    print(A)
    a = random.choice(A)
    print(a)
    A.remove(a)
    print("Start", A)
    B = list(range(1, m-1))
    print(B)
    b = random.choice(B)
    print(b)
    B.remove(b)
    print("Cil", B)
    bludiste[a][b] = 2
    
    
    # souradnice pro cil
    c = random.choice(A)
    print(c)
    d = random.choice(B)
    print(d)
    bludiste[c][d] = 3
    k = int(np.where(bludiste == 3)[0])
    l = int(np.where(bludiste == 3)[1])
    r = int(np.where(bludiste == 2)[0])
    s = int(np.where(bludiste == 2)[1])
    
    #print("PRIPRAVENE\n", bludiste)
    #print()

    return  bludiste

def ctverecek(velikost_ctverecku,x,y):

    turtle.goto(x, y)
    turtle.begin_fill()
    for i in range(4):
        turtle.forward(velikost_ctverecku)
        turtle.right(90)
    turtle.end_fill()
    
 
def vykresleni(bludiste,m):

    velikost_ctverecku = 15
    barvy = ["blue", "black", "green", "red","pink", "yellow"]
    start_x = -10*len(bludiste)
    start_y = -10*len(bludiste)

    turtle.penup()
    for i in range(0, len(bludiste), 1):
        for j in range(0, len(bludiste[i]), 1):
            turtle.color(barvy[bludiste[i][j]])
            ctverecek(velikost_ctverecku, start_x + j * velikost_ctverecku, start_y + i * velikost_ctverecku)
    turtle.pendown()


def cesta(bludiste):

    r = int(np.where(bludiste == 2)[0])
    s = int(np.where(bludiste == 2)[1])
    start = (r, s)

    k = int(np.where(bludiste == 3)[0])
    l = int(np.where(bludiste == 3)[1])
    cil = (k, l)

    print("Souradnice startu", start)
    print(bludiste)
    print("Cil", cil)

    fronta = [cil]
    print("Fronta", fronta)
    presle = {cil: None}

    while len(fronta) != 0:
        aktualni = fronta.pop(0)
        sousedni = []
        nejkratsi_cesta = []

        # nahoru
        if aktualni[0] > 0:
            if bludiste[aktualni[0] - 1][aktualni[1]] in (1, 2):
                sousedni.append((aktualni[0] - 1, aktualni[1]))

        # dolu
        if aktualni[0] < (len(bludiste) - 1):
            if bludiste[aktualni[0] + 1][aktualni[1]] in (1, 2):
                sousedni.append((aktualni[0] + 1, aktualni[1]))

        # doprava
        if aktualni[1] < (len(bludiste[0]) - 1):
            if bludiste[aktualni[0]][aktualni[1] + 1] in (1, 2):
                sousedni.append((aktualni[0], aktualni[1] + 1))

        # doleva
        if aktualni[1] > 0:
            if bludiste[aktualni[0]][aktualni[1] - 1] in (1, 2):
                sousedni.append((aktualni[0], aktualni[1] - 1))

        for t in range(0, len(sousedni)):
            soused = sousedni[t]
            if soused not in presle:

                fronta.append(soused)
                presle[soused] = aktualni
            else:
                pass

        true = (start == aktualni)
        if true == True:

            while aktualni:
                nejkratsi_cesta.append(aktualni)
                aktualni = presle[aktualni]

            return nejkratsi_cesta
    
    
def main():

    m = int(input('Zadej velkost hraciho pole:'))  # alespoň 5, nejlepe maximalne 30 !!
    screen=turtle.Screen()
    screen.setup(800,500)
    turtle.bgcolor("grey70")
    turtle.title("Bludiště")
    style = ('Courier', 10, 'italic')
    turtle.hideturtle()
    turtle.penup()
    turtle.goto(-15,210)
    turtle.write('Bludiště: Zelená je START, červená je CÍL a žlutá zobrazuje nejkratší cestu.', font=style, align='center')
    turtle.pendown()
    turtle.speed("fastest")
    turtle.hideturtle()
    bludiste= matice(m)
    print(bludiste)
    vykresleni(bludiste,m)
    cesticka=cesta(bludiste)
   

    while cesticka == None :
        print("Cesta neexistuje")
        turtle.penup()
        turtle.goto(-15, 180)
        turtle.write('CESTA NEEXISTUJE', font=style, align='center')
        turtle.pendown()
        turtle.getscreen().update()
        time.sleep(3)
        break

    else:
        print("Nejkratsi cesta", cesticka)
        for i in range(1,len(cesticka)-1):
            e=cesticka[i]
            print("a:", e)
            f = int(e[0])
            g = int(e[1])
            print("f:", f)
            print("g:", g)
            bludiste[f][g]= 5
            
            velikost_ctverecku = 15
            barvy = ["blue", "black", "green", "red", "pink","yellow"]
            turtle.penup()
            start_x = -10 * len(bludiste)
            start_y = -10 * len(bludiste)
            turtle.color(barvy[bludiste[f][g]])
            ctverecek(velikost_ctverecku, start_x + g * velikost_ctverecku, start_y + f * velikost_ctverecku)
            turtle.pendown()
            
        turtle.penup()
        turtle.goto(-15, 180)
        turtle.write('CETSA NALEZENA', font=style, align='center')
        turtle.pendown()
        print("VYSLEDEK", bludiste)
        turtle.getscreen().update()
        turtle.done()


if __name__ == "__main__":
    main()
